;+
;
;Procedure that gives back the Sheth-Tormen mass function (2002)
;using the code Reed, Bower, Frenk, Jenkins, and Theuns 2007, MNRAS, 374, 2
;
;THE CURRENT GRID OF HALO MASS IS COMPUTED USING THE POWER SPECTRUM
;COMPUTED WITH WMAP3 PARAMETERS.....
;
;
;
;
;
;Return halo,  number density log_10[dn](h^3/Mpc^3/dlog10m)  
;If the keyword \cumul is set, the output is log_10[n>M](h^3/Mpc^3)
;
;
; mass           --> input, halo mass log (Msun h-1) [min,max]
; redshift       --> the redshift to evaluate at (a closest match on a
;                    grid is found)
; cumul          --> if set, return the cumulative values
; model          --> read a set of model for a given cosmological
;                    parameter set 
;
;
;Current allowed model
;BOLSH
;DEF
;WMAP5
;
;
;-

function shethtormen, mass, redshift, model=model, cumul=cumul, silent=silent


;set the path
path=getenv("MIDL")+'/Cosm/halo_mass/STDATA/'+model

;get the list of the redshift
spawn, "ls "+path+"*", list

p1=strlen(model)
redz=strmid(list,p1)

;check if extrapolate
if(redshift lt min(redz) or  redshift gt max(redz) and not keyword_set(silent)) $
  then splog, 'Extrapolation!!!!!'



;find closest
diff_z=abs(redz-redshift)
minindex=where(diff_z eq min(diff_z))

if not keyword_set(silent) then splog, 'Closest redhsift is', redz[minindex]


;open file and read data
;log_10[m](msun/h),log_10[dn](h**3/Mpc**3/dlog10m),log_10[n>M](h**3/Mpc**3) 


readcol, path+'/'+list[minindex], mass_n, halo_n, halo_ncum, /silent


;make the interpolation on log space
if ~keyword_set(cumul) then halo=interpol(halo_n,mass_n,mass) $
else halo=interpol(halo_ncum,mass_n,mass)

return, halo

end
